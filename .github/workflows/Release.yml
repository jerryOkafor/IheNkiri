name: Release - APKs

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Decrypt large secret
        shell: bash
        run: |
          ./.github/scripts/decrypt_secret.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp ci-cd/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Install GMD image for baseline profile generation
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager "system-images;android-33;aosp_atd;x86_64"

      - name: Accept Android licenses
        run: yes | "$ANDROID_HOME"/cmdline-tools/latest/bin/sdkmanager --licenses || true

      - name: Build release variant including baseline profile generation
        run: |
          ./gradlew :app:bundleRelease :app:assembleRelease \
            -Pandroid.testInstrumentationRunnerArguments.androidx.benchmark.enabledRules=BaselineProfile \
            -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect" \
            -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=true \
            -Pandroid.experimental.androidTest.numManagedDeviceShards=1 \
            -Pandroid.experimental.testOptions.managedDevices.maxConcurrentDevices=1

      - name: Retrieve VersionName and VersionCode
        id: version
        run: |
          echo "::set-output name=VERSION_CODE::$(${{github.workspace}}/gradlew -q versionCode)"
          echo "::set-output name=VERSION_NAME::$(${{github.workspace}}/gradlew -q versionName)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{steps.android_version.outputs.VERSION_NAME}}
          release_name: Release - ${{steps.android_version.outputs.VERSION_NAME}}(${{steps.android_version.outputs.VERSION_CODE}})
          draft: true
          prerelease: false

      - name: Upload app
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload App Bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/bundle/app-release.aab
          asset_name: app-release.aab
          asset_content_type: application/x-authorware-bin